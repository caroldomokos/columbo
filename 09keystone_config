#!/bin/bash
source /opt/base_config.rc
#install the packages
# add the ubuntu cloud ring support for juno
echo "deb http://ubuntu-cloud.archive.canonical.com/ubuntu" \
  "trusty-updates/juno main" > /etc/apt/sources.list.d/cloudarchive-juno.list
# add the key 
#https://github.com/dguitarbite/OpenStack-Folsom-VM-SandBox-Guide/issues/5
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 5EDB1B62EC4926EA
apt-get update && apt-get install ubuntu-cloud-keyring -y 
apt-get install keystone python-keystoneclient python-mysqldb -y
# remove the Sqlite db
rm -f /var/lib/keystone/keystone.db
# overwrite the keystone config file
cat > /etc/keystone/keystone.conf <<EOF
[DEFAULT]
admin_token=$master_pass
admin_bind_host=$keystone_ip
verbose=true
log_dir=/var/log/keystone
[assignment]
[auth]
[cache]
[catalog]
[credential]
[database]
connection=mysql://keystone:$master_pass@$database_ip/keystone
[ec2]
[endpoint_filter]
[federation]
[identity]
[kvs]
[ldap]
[matchmaker_ring]
[memcache]
[oauth1]
[os_inherit]
[paste_deploy]
[policy]
[revoke]
driver = keystone.contrib.revoke.backends.sql.Revoke
[signing]
[ssl]
[stats]
[token]
provider=keystone.token.providers.uuid.Provider
driver=keystone.token.backends.sql.Token
[trust]
[extra_headers]
Distribution = Ubuntu
EOF
###populate the databases
su -s /bin/sh -c "keystone-manage db_sync" keystone
# restart the service
service keystone restart
####create initial admin user and tenants, etc...
export OS_SERVICE_TOKEN=$master_pass
export OS_SERVICE_ENDPOINT=http://$keystone_ip:35357/v2.0
# wait 1 sec for keystone to become available
sleep 1
# create admin tenant
keystone tenant-create --name admin --description "Admin Tenant"
# create admin user
keystone user-create --name admin --pass $master_pass
#Create the admin role
keystone role-create --name admin
#Add the admin role to the admin tenant and user
keystone user-role-add --user admin --tenant admin --role admin
#Create the service tenant. This is the tenant under which we have all services
keystone tenant-create --name service --description "Service Tenant"
#Create the service entity for the Identity service
keystone service-create --name keystone --type identity --description "OpenStack Identity"
#OpenStack provides three API endpoint variations for each service: admin, internal, and public. In a production environment,
#the variants might reside on separate networks that service different types of users for security reasons. Also, OpenStack
#supports multiple regions for scalability. For simplicity, this configuration uses the management network for all endpoint
#variations and the regionOne region.
#Create the Identity service API endpoints:
keystone endpoint-create \
  --service-id $(keystone service-list | awk '/ identity / {print $2}') \
  --publicurl http://$keystone_ip:5000/v2.0 \
  --internalurl http://$keystone_ip:5000/v2.0 \
  --adminurl http://$keystone_ip:35357/v2.0 \
  --region regionOne
###now that we have the admin user we do not use the token anymore. some cleanup
unset OS_SERVICE_TOKEN OS_SERVICE_ENDPOINT
## run a small test for sanity and log the results in a new file
echo token  get results > kesytone_test_results
keystone --os-tenant-name admin --os-username admin --os-password $master_pass \
  --os-auth-url http://$keystone_ip:35357/v2.0 token-get >>  kesytone_test_results
echo tenant list >> kesytone_test_results
keystone --os-tenant-name admin --os-username admin --os-password $master_pass \
  --os-auth-url http://$keystone_ip:35357/v2.0 tenant-list >> kesytone_test_results
echo user list >> kesytone_test_results
keystone --os-tenant-name admin --os-username admin --os-password $master_pass \
  --os-auth-url http://$keystone_ip:35357/v2.0 user-list >> kesytone_test_results
echo role list >> kesytone_test_results
keystone --os-tenant-name admin --os-username admin --os-password $master_pass \
  --os-auth-url http://$keystone_ip:35357/v2.0 role-list >> kesytone_test_results
export OS_TENANT_NAME=admin
export OS_USERNAME=admin
export OS_PASSWORD=$master_pass
export OS_AUTH_URL=http://$keystone_ip:35357/v2.0
# create the glance user, service, endpoint etc... in the keystone catalogs
keystone user-create --name glance --pass $master_pass
keystone user-role-add --user glance --tenant service --role admin
keystone service-create --name glance --type image --description "OpenStack Image Service"
keystone endpoint-create \
  --service-id $(keystone service-list | awk '/ image / {print $2}') \
  --publicurl http://$glance_ip:9292 \
  --internalurl http://$glance_ip:9292 \
  --adminurl http://$glance_ip:9292 \
  --region regionOne
# keystone nova commands
keystone user-create --name nova --pass $master_pass
keystone user-role-add --user nova --tenant service --role admin
keystone service-create --name nova --type compute \
  --description "OpenStack Compute"
keystone endpoint-create \
  --service-id $(keystone service-list | awk '/ compute / {print $2}') \
  --publicurl http://$nova_ip:8774/v2/%\(tenant_id\)s \
  --internalurl http://$nova_ip:8774/v2/%\(tenant_id\)s \
  --adminurl http://$nova_ip:8774/v2/%\(tenant_id\)s \
  --region regionOne
#keystone neutron commands
keystone user-create --name neutron --pass $master_pass
keystone user-role-add --user neutron --tenant service --role admin
keystone service-create --name neutron --type network \
  --description "OpenStack Networking"
keystone endpoint-create \
  --service-id $(keystone service-list | awk '/ network / {print $2}') \
  --publicurl http://$neutron_ip:9696 \
  --adminurl http://$neutron_ip:9696 \
  --internalurl http://$neutron_ip:9696 \
  --region regionOne
