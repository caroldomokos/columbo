#!/bin/bash
source base_config.rc
source admin-openrc.sh
# create the glance user, service, endpoint etc... in the keystone catalogs
keystone user-create --name glance --pass $master_pass
keystone user-role-add --user glance --tenant service --role admin
keystone service-create --name glance --type image --description "OpenStack Image Service"
keystone endpoint-create \
  --service-id $(keystone service-list | awk '/ image / {print $2}') \
  --publicurl http://$host_name:9292 \
  --internalurl http://$host_name:9292 \
  --adminurl http://$host_name:9292 \
  --region regionOne
# install the packages
apt-get install glance python-glanceclient -y
# overwrite glance config files
cat > /etc/glance/glance-api.conf <<EOF
[DEFAULT]
verbose=True
bind_host = 0.0.0.0
bind_port = 9292
log_file = /var/log/glance/api.log
backlog = 4096
workers = 1
registry_host = 0.0.0.0
registry_port = 9191
registry_client_protocol = http
rabbit_host = localhost
rabbit_port = 5672
rabbit_use_ssl = false
rabbit_userid = guest
rabbit_password = guest
rabbit_virtual_host = /
rabbit_notification_exchange = glance
rabbit_notification_topic = notifications
rabbit_durable_queues = False
qpid_notification_exchange = glance
qpid_notification_topic = notifications
qpid_hostname = localhost
qpid_port = 5672
qpid_username =
qpid_password =
qpid_sasl_mechanisms =
qpid_reconnect_timeout = 0
qpid_reconnect_limit = 0
qpid_reconnect_interval_min = 0
qpid_reconnect_interval_max = 0
qpid_reconnect_interval = 0
qpid_heartbeat = 5
qpid_protocol = tcp
qpid_tcp_nodelay = True
filesystem_store_datadir = /var/lib/glance/images/
swift_store_auth_version = 2
swift_store_auth_address = 127.0.0.1:5000/v2.0/
swift_store_user = jdoe:jdoe
swift_store_key = a86850deb2742ec3cb41518e26aa2d89
swift_store_container = glance
swift_store_create_container_on_put = False
swift_store_large_object_size = 5120
swift_store_large_object_chunk_size = 200
swift_enable_snet = False
s3_store_host = 127.0.0.1:8080/v1.0/
s3_store_access_key = <20-char AWS access key>
s3_store_secret_key = <40-char AWS secret key>
s3_store_bucket = <lowercased 20-char aws access key>glance
s3_store_create_bucket_on_put = False
sheepdog_store_address = localhost
sheepdog_store_port = 7000
sheepdog_store_chunk_size = 64
delayed_delete = False
scrub_time = 43200
scrubber_datadir = /var/lib/glance/scrubber
image_cache_dir = /var/lib/glance/image-cache/
[database]
sqlite_db = /var/lib/glance/glance.sqlite
backend = sqlalchemy
connection=mysql://glance:$master_pass@$host_name/glance
[keystone_authtoken]
auth_uri=http://$host_name:5000/v2.0
identity_uri=http://$host_name:35357
admin_tenant_name=service
admin_user=glance
admin_password=$master_pass
[paste_deploy]
flavor=keystone
[store_type_location_strategy]
[glance_store]
default_store=file
filesystem_store_datadir=/var/lib/glance/images/
EOF
###glance registry
cat > /etc/glance/glance-registry.conf <<EOF
[DEFAULT]
verbose=True
bind_host = 0.0.0.0
bind_port = 9191
log_file = /var/log/glance/registry.log
backlog = 4096
api_limit_max = 1000
limit_param_default = 25
[database]
sqlite_db = /var/lib/glance/glance.sqlite
backend = sqlalchemy
connection=mysql://glance:$master_pass@$host_name/glance
[keystone_authtoken]
auth_uri=http://host_name:5000/v2.0
identity_uri=http://$host_name:35357
admin_tenant_name=service
admin_user=glance
admin_password=$master_pass
[paste_deploy]
flavor=keystone
EOF
# create the tables
su -s /bin/sh -c "glance-manage db_sync" glance
#Restart the Image Service services:
service glance-registry restart
service glance-api restart
#By default, the Ubuntu packages create an SQLite database.
#Because this configuration uses a SQL database server, you can remove the SQLite database file:
rm -f /var/lib/glance/glance.sqlite
##verification - upload and check cirros and coreos
# download coreos
wget http://stable.release.core-os.net/amd64-usr/current/coreos_production_openstack_image.img.bz2
bunzip2 coreos_production_openstack_image.img.bz2
glance image-create --name "cirros-0.3.3-x86_64" --disk-format=qcow2 \
  --container-format=bare --is-public=true \
  --copy-from http://cdn.download.cirros-cloud.net/0.3.3/cirros-0.3.3-x86_64-disk.img
glance image-create --name CoreOS \
  --container-format bare \
  --disk-format qcow2 \
  --file coreos_production_openstack_image.img \
  --is-public True
echo glance images list > glance_test_results
glance image-list >> glance_test_results
# core os cloud config - wip
cat cloud-config.yaml << EOF
#cloud-config
coreos:
  etcd:
    # generate a new token for each unique cluster from https://discovery.etcd.io/new
    discovery: https://discovery.etcd.io/<token>
    # multi-region and multi-cloud deployments need to use $public_ipv4
    addr: $private_ipv4:4001
    peer-addr: $private_ipv4:7001
  units:
    - name: etcd.service
      command: start
    - name: fleet.service
      command: start
ssh_authorized_keys:
  # include one or more SSH public keys
  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC0g+ZTxC7weoIJLUafOgrm+h...
EOF
# remove the downloaded file
rm -rf coreos_production_openstack_image.img



