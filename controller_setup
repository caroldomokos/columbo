#!/bin/bash
# short intro
# source http://www.cyberciti.biz/tips/linux-unix-pause-command.html
read -p "This script will install openstack basic components (keystone,nova,neutron,glance) on a single host. Juno, ubuntu trusty, etc To be completed.U need to run it as root/sudo Press enter to continue"
## good idea stolen from devstack as I get a lot of errors on locale from lxc containers
#unset LANG
#unset LANGUAGE
#LC_ALL=C
#export LC_ALL
# source the variables
source base_config.rc
echo "creating the admin credentials"
cat > admin-openrc.sh <<EOF
export OS_TENANT_NAME=admin
export OS_USERNAME=admin
export OS_PASSWORD=$master_pass
export OS_AUTH_URL=http://$keystone_ip:35357/v2.0
EOF
source admin-openrc.sh
echo "updating the system"
# add the ubuntu cloud ring support for juno
echo "deb http://ubuntu-cloud.archive.canonical.com/ubuntu" \
  "trusty-updates/juno main" > /etc/apt/sources.list.d/cloudarchive-juno.list
# add the key 
#https://github.com/dguitarbite/OpenStack-Folsom-VM-SandBox-Guide/issues/5
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 5EDB1B62EC4926EA
apt-get update && apt-get install ubuntu-cloud-keyring -y 
echo "installing lxc and creating the first ubuntu trusty container"
echo "00"
./00network_config
# set the public interface separately so that the variable would not be substituted
echo "01"
./01eth2_config
# create the admin bridge used by containers and host
echo "011"
./011eth3_bridge_config
# restart networking
echo "02"
./02restart_network_config
# overwrite /etc/hosts with the new value for our hostname and  fixed ip - not pointing to 127.0.0.1
echo "03"
#./03hosts_file_config
# overite the /etc/hostname with the new value
#hostname $host_name
#echo "04"
#./04hostname_config
awk '//{print $1}' /etc/hostname
echo $HOSTNAME
# create the dns servers of google
echo "05"
./05resolvconf_config
#let's update the system
#echo "06"
#./06apt_config
# create the db container
echo "005"
./005containers_config
echo "07"
lxc-start -n datatbase
sleep 3
lxc-attach -n database -- /opt/05resolvconf_config
lxc-attach -n database --  service resolvconf restart
lxc-attach -n database -- /opt/07mariadb_config
# create the messaging container
echo "08"
lxc-start -n rabbit
sleep 3
lxc-attach -n rabbit -- /opt/05resolvconf_config
lxc-attach -n rabbit --  service resolvconf restart
lxc-attach -n rabbit -- /opt/08rabbitmq_config
#####keystone#####
##################
echo "09"
lxc-start -n keystone
sleep 3
lxc-attach -n keystone -- /opt/05resolvconf_config
lxc-attach -n keystone --  service resolvconf restart
lxc-attach -n keystone -- /opt/09keystone_config
# create the image container
echo "10"
lxc-start -n glance
sleep 3
lxc-attach -n glance -- /opt/05resolvconf_config
lxc-attach -n glance --  service resolvconf restart
lxc-attach -n glance -- /opt/10glance_config
# create the nova server container
echo "11"
lxc-start -n ova
sleep 3
lxc-attach -n nova -- /opt/05resolvconf_config
lxc-attach -n nova --  service resolvconf restart
lxc-attach -n nova -- /opt/11nova_config
# create the neutron server container
echo "12"
lxc-start -n  neutron
sleep 3
lxc-attach -n neutron -- /opt/05resolvconf_config
lxc-attach -n neutron --  service resolvconf restart
lxc-attach -n neutron -- /opt/12neutron_config
lxc-attach -n nova -- service nova-api restart
lxc-attach -n nova -- service nova-scheduler restart
lxc-attach -n nova -- service nova-conductor restart
# restart the containers for good measure
for container_name in "database" "rabbit" "keystone" "glance" "nova" "neutron"
do
lxc-stop -n $container_name
sleep 1
lxc-start -n $container_name -d
done

